// Initialiser l'application par défaut
app, err := firebase.NewApp(context.Background(), nil)
if err != nil {
        log.Fatalf("error initializing app: %v\n", err)
}

// Accéder au service d'authentification depuis l'application par défaut
client, err := app.Auth(context.Background())
if err != nil {
        log.Fatalf("error getting Auth client: %v\n", err)        
}

Certains cas d'utilisation vous obligent à créer plusieurs applications en même temps. Par exemple, vous souhaiterez peut-être 
lire les données de la base de données Realtime d'un projet Firebase et créer des jetons personnalisés pour un autre projet. 
Ou vous voudrez peut-être authentifier deux applications avec des informations d'identification distinctes. Le SDK Firebase 
vous permet de créer plusieurs applications en même temps, chacune avec ses propres informations de configuration.

// Initialize the default app
defaultApp, err := firebase.NewApp(context.Background(), nil)
if err != nil {
        log.Fatalf("error initializing app: %v\n", err)
}

// Initialize another app with a different config
opt := option.WithCredentialsFile("service-account-other.json")
otherApp, err := firebase.NewApp(context.Background(), nil, opt)
if err != nil {
        log.Fatalf("error initializing app: %v\n", err)
}

// Access Auth service from default app
defaultClient, err := defaultApp.Auth(context.Background())
if err != nil {
        log.Fatalf("error getting Auth client: %v\n", err)
}

// Access auth service from other app
otherClient, err := otherApp.Auth(context.Background())
if err != nil {
        log.Fatalf("error getting Auth client: %v\n", err)
}
